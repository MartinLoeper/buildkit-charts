apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "buildkit.fullname" . }}
  labels:
    {{- include "buildkit.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "buildkit.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or .Values.rootless .Values.podAnnotations }}
      annotations:
        {{- if .Values.rootless }}
        container.apparmor.security.beta.kubernetes.io/{{ .Chart.Name }}: unconfined
        {{- end }}
        {{- with .Values.podAnnotations -}}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      labels:
        {{- include "buildkit.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: merge-ca-certificates
          image: docker.io/kalaksi/ca-certificates
          volumeMounts:
            - name: new-certs
              mountPath: /etc/ssl/certs
          env:
            - name: CA_CERT_1
              value: |
                -----BEGIN CERTIFICATE-----
                MIIDbzCCAlegAwIBAgIUYx+3mbwm9hLO/sSU1lg2tNC/HIUwDQYJKoZIhvcNAQEL
                BQAwODEaMBgGA1UEAwwRcmVnaXN0cnkuaW50ZXJuYWwxGjAYBgNVBAoMEXJlZ2lz
                dHJ5LmludGVybmFsMB4XDTI0MTAxODE5NTc0MFoXDTI1MTAxODE5NTc0MFowODEa
                MBgGA1UEAwwRcmVnaXN0cnkuaW50ZXJuYWwxGjAYBgNVBAoMEXJlZ2lzdHJ5Lmlu
                dGVybmFsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqJoEejMWoBQU
                gxxJVdxwjaPfwlMSKVnB4aoHn98qOzS5JLTx5sIMOqL8I35E4FsVqzvV/zgE/QQN
                +9LV7nSY+UN/Ogob3TAcUkzWjuoB5Jt2DjhK04f9diGsBfmb7Q+LUaVHMRIW4VzF
                eAx5T2vPipF9SP8seiifcTpFtJbwcF8JF6GZpJ4fn9qEhUp8nWxBmklvWzc7UGw4
                NqBPynoxY7NBqMKG4tetNLcbGSrXlNWGNQZ1fX8e4MUiSiLc7sXdL7wgSBnwehBm
                iJWGndgwrCzgwhpBKmuoK7rqP7x29nZJ6eu8KZaATfkgG33exo+Ct5QVFGyfYrz6
                VpW4E0bcIwIDAQABo3EwbzAdBgNVHQ4EFgQUG4APfNGwkdZKtLox6Pq88rBTT34w
                HwYDVR0jBBgwFoAUG4APfNGwkdZKtLox6Pq88rBTT34wDwYDVR0TAQH/BAUwAwEB
                /zAcBgNVHREEFTATghFyZWdpc3RyeS5pbnRlcm5hbDANBgkqhkiG9w0BAQsFAAOC
                AQEAI0nbRO6pEETcpc2e4U1y1PsXRACYb823y4JXNYIaBAYn/9D30Zlwd+mhICaT
                1QX8GG3VYBDV59K/fDcHvhvfx6uYzTrPeMK92Uid+O3JdV9YuOGWKu8tLbWIpER2
                IZpiINwFbex2jOFgUBGRqPA6HAzl5Tb2tRWMEdfY2D/XTqL1fGlszcclO/4sR/3W
                GuurDPIDiwWlSXJz0J1BY16TLQIIWfGV2W+L47P5O+ygEe3qwHs4e5D5/PaIa78V
                s+2BdejBgg2n2I3MgXs39g4p6MivyKVBlVlTkRqZ0Q6rTZ+YcCWadiKtjxNf5FuQ
                S5f4kMBiNYKsD199tO2bAO+aAA==
                -----END CERTIFICATE-----
            - name: CA_CERT_0
              value: |
                -----BEGIN CERTIFICATE-----
                MIIDFDCCAfygAwIBAgIRALyGPTcTTnAo8BR1LXO5aa4wDQYJKoZIhvcNAQELBQAw
                FDESMBAGA1UEAxMJaGFyYm9yLWNhMB4XDTI0MTAxNjIyMzYxNloXDTI1MTAxNjIy
                MzYxNlowFDESMBAGA1UEAxMJaGFyYm9yLWNhMIIBIjANBgkqhkiG9w0BAQEFAAOC
                AQ8AMIIBCgKCAQEA6voQWSM7PWtNHxDPcRRFyXOKROqfeG4iCbx8yCjpVG3g6ZP+
                lIMGtTmhdghNFCCtWYubJ0FleajJo+yvcbkDrU0b5kzitdhQCZqNobU1jWqPnHAV
                hlAkQic8xZ6hSqf/HB5j4Z4h1KKxG/8zWx1Yl4CEUPTks89wz+zk87L0G1ufbCZG
                pFhh/v+vn1Ke67sCBiDS7eMTZOBUg5o7Cua4qfkT9ZWgTYZ5Z0rFWu+NCc4lteyz
                NWLVmXbGY4W7WTlTf/pYnFtd97xtKdrQsdHKCRc1TX5ncpMIz2mvOPhBcTjqw6e1
                ZtXkcopU9YQcHxaXJcMt12a8wXBkQXUmxT/SuwIDAQABo2EwXzAOBgNVHQ8BAf8E
                BAMCAqQwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMA8GA1UdEwEB/wQF
                MAMBAf8wHQYDVR0OBBYEFHDvR4hJmI8Uho7BLkzV2MocBE2TMA0GCSqGSIb3DQEB
                CwUAA4IBAQCOSsCODHgLNxS1t9eu1J8Tr/WO7ympgk4sgiOCSY15S0wXjL5e3vy7
                t78XybcFU5NJXbjVCmIWZBV+IKIEVx+LUDlk9jKhI6TvdBCMrCjLCaQAGspQq0Yi
                j6SbROSuooksSjoMYMaHBFEET1jckWccitPGpmDWYUmglgAZa5DIR7FaUknktAJa
                W7q+47tdlkbzpnUAy5lEAuXfHpWHya1XDHYP1e/o4stslgy9xUdN9SM+UJzOVu9b
                YIUxoPqCrtb7NV2dKjbZ18mayEZ9VAKycVN7RoGkyAds7ylatUeqka8ct1ez8O72
                spi4lrbiPySEh5O8rE7GjTzSYjlx5eS7
                -----END CERTIFICATE-----
                -----BEGIN CERTIFICATE-----
                MIIDNTCCAh2gAwIBAgIRAPYqHzwU3rkh7wH0dLhEbEYwDQYJKoZIhvcNAQELBQAw
                FDESMBAGA1UEAxMJaGFyYm9yLWNhMB4XDTI0MTAxNjIyMzYxNloXDTI1MTAxNjIy
                MzYxNlowGjEYMBYGA1UEAxMPaGFyYm9yLmludGVybmFsMIIBIjANBgkqhkiG9w0B
                AQEFAAOCAQ8AMIIBCgKCAQEAwd/6xMl5yH0d0csLFk0bDPifg+A1B4nPKkNw3t9h
                vzC2CpLwH4TsndKBUNo7il4W7K1HTx4CrJ98mZ3yUKndIN4q8Yf41rf0x8DGN5mZ
                uVsI8/B7tp1B9FT5OQ8v89kUi4t+dfhq+29GqnnAO46QSnnwG4h2CSx6/iztbwT6
                b3HLnPfH22R/wjSWv5mzPmBf3gf4U3nypUDpfNwLKbwZr3tcW+2hZY8MpYF1n8Z2
                JPWBqCteW2axscTY4/iYm9QQJdYqVZDVDdgOs4NFmd1/kgeL0O3l0Ksd0Wbz94v2
                5OlTXsrYkcrrvXtcRVYIDQ1RwHMSfOVwsMAoU/PlR5UpXQIDAQABo3wwejAOBgNV
                HQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1Ud
                EwEB/wQCMAAwHwYDVR0jBBgwFoAUcO9HiEmYjxSGjsEuTNXYyhwETZMwGgYDVR0R
                BBMwEYIPaGFyYm9yLmludGVybmFsMA0GCSqGSIb3DQEBCwUAA4IBAQCdyNGUYB7g
                ppMXy3KQiaohLIjOkttF4b6oHoT7yaHDOlaiogmy1Na2sGAHpJlH2udGBjVHHu25
                Hr/DDGKBbZT8K0xawj2RW2ON3+2ggLYbxndDIbtbGc05+Rj5fU0RloNZEoG+F2fD
                wFOf44CdvgkQPY4VAa0k1ht5gJbr2m8voN8zHue/PuqsX091l5GrgG9g2G6zOBI5
                X/IxfFY7asJAonheOlTI2q83rgIeef7cOLcAqy+7Nx8P2fnWYMuCVknrLGZSV2nH
                9jCG+WlLUCPbPrCQddu4EZJRVm9lmytjeUHuBGIWEMrWDA9sFzrsN9DutXM5v0KT
                NWc7/v9M2ZBo
                -----END CERTIFICATE-----
      containers:
        - name: {{ .Chart.Name }}
          image: "moby/buildkit:master-rootless"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.rootless .Values.tls.enabled .Values.buildkitdToml }}
          volumeMounts:
          {{- if .Values.buildkitdToml }}
            - name: config
              mountPath: {{ if .Values.rootless }}/home/user/.config/buildkit{{ else }}/etc/buildkit{{ end }}
            - name: new-certs
              mountPath: /etc/ssl/certs
            - name: config
              mountPath: /etc/docker/certs.d/harbor.internal/ca.crt
              subPath: ca.crt
          {{- end }}
          {{- if .Values.tls.enabled }}
            - name: certs
              readOnly: true
              mountPath: /certs
          {{- end }}
          {{- if .Values.rootless }}
            - mountPath: /home/user/.local/share/buildkit
              name: buildkitd
          {{- end }}
          {{- end }}
          args:
            - --addr
            - unix:///run/{{ .Values.rootless | ternary "user/1000" ""}}/buildkit/buildkitd.sock
            - --addr
            - tcp://0.0.0.0:1234
          {{- if .Values.rootless }}
            - --oci-worker-no-process-sandbox
          {{- end }}
          {{- if .Values.tls.enabled }}
            - --tlscacert
            - /certs/ca.pem
            - --tlscert
            - /certs/cert.pem
            - --tlskey
            - /certs/key.pem
          {{- end }}
          {{- if .Values.debugLog }}
            - --debug
          {{- end }}
          ports:
            - name: tcp
              containerPort: 1234
              protocol: TCP
          readinessProbe:
            exec:
              command:
              - buildctl
              - debug
              - workers
            initialDelaySeconds: 5
            periodSeconds: 30
          livenessProbe:
            exec:
              command:
              - buildctl
              - debug
              - workers
            initialDelaySeconds: 5
            periodSeconds: 30
          securityContext:
          {{- if .Values.rootless }}
            seccompProfile: # Needs Kubernetes >= 1.19
              type: Unconfined
            runAsUser: 1000
            runAsGroup: 1000
          {{- else }}
            privileged: true
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.lifecycle }}
          lifecycle:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- if or .Values.rootless .Values.tls.enabled .Values.buildkitdToml }}
      volumes:
      - name: new-certs
        emptyDir: {}
      {{- if .Values.buildkitdToml }}
      - name: config
        configMap:
          name: buildkitd-config
      {{- end }}
      {{- if .Values.rootless }}
      - name: buildkitd
        emptyDir: {}
      {{- end }}
      {{- if .Values.tls.enabled }}
      - name: certs
        secret:
          secretName: {{ include "buildkit.fullname" . }}
      {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
